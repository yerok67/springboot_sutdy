package kr.gdu.controller;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import jakarta.servlet.http.HttpSession;
import kr.gdu.logic.Cart;
import kr.gdu.logic.Item;
import kr.gdu.service.ShopService;


@Controller
@RequestMapping("cart")
public class CartController {
	@Autowired
	private ShopService service;
	@RequestMapping("cartAdd")
	public ModelAndView add(Integer id, Integer quantity, HttpSession session) {
		// new ModelAndView(뷰명) : /WEB-INF/view/cart/cart.jsp
		ModelAndView mav = new ModelAndView("cart/cart");
		Item item = service.getItem(id);	// id의 해당하는 Item 객체
		Cart cart = (Cart) session.getAttribute("CART");
		if (cart == null) {	// session의 CART 이름의 객체가 없는 경우
			cart = new Cart();
			session.setAttribute("CART", cart);
		}
		cart.push(new ItemSet(item, quantity));
		mav.addObject("message", item.getName() + ":" + quantity + "개 장바구니 추가");
		mav.addObject("cart", cart);
		return mav;
	}
	@RequestMapping("cartDelete")
	public ModelAndView delete(int index, HttpSession session) {
		ModelAndView mav = new ModelAndView("cart/cart");		
		Cart cart = (Cart)session.getAttribute("CART");
		ItemSet removeObj = cart.getItemSetList().remove(index);
		mav.addObject("message", removeObj.getItem().getName() + "가(이) 삭제 되었습니다.");
		mav.addObject("cart",cart);
		return mav;
	}
	@RequestMapping("cartView")
	public ModelAndView view(HttpSession session) {
		ModelAndView mav = new ModelAndView("cart/cart");
		mav.addObject("message","장바구니 상품 조회");
		mav.addObject("cart",session.getAttribute("CART"));
		return mav;
	}
	/*
	 * 주문전 확인 페이지
	 * 1. 장바구니에 상품 존재해야함
	 * 	  상품이 없는경우 예외 발생.
	 * 2. 로그인 된 상태여야함
	 *    로그아웃상태 : 예외 발생 
	 */
	@RequestMapping("checkout")
	public String checkout(HttpSession session) {
		return null;
	}
	@RequestMapping("end")
	public ModelAndView checkend(HttpSession session) {
		ModelAndView mav = new ModelAndView();
		Cart cart = (Cart)session.getAttribute("CART");
		User loginUser = (User)session.getAttribute("loginUser");
		Sale sale = service.checkend(loginUser,cart);
		session.removeAttribute("CART");
		mav.addObject("sale",sale);
		return mav;
	}
}
